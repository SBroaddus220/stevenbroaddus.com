import {LitElement, html} from 'lit';
import {asyncReplace} from 'lit/directives/async-replace.js';

const realName = "Steven Broaddus";

async function* randomizeName(myName) {
  let index = 0;
  let charIndex = 0;   
  let randomChars = ["!", "$", "%", "^", "&", "*", "(", ")", "+", "=", "-", "/", "\\", "[", "]", "{", "}"];
  for (let i = 0; i < 25; i++) { 
      index = Math.floor(Math.random() * myName.length);
      charIndex = Math.floor(Math.random() * randomChars.length);
      if (/\S/.test(myName.charAt(index))) {
       yield myName = myName.substring(0, index) + randomChars[charIndex] + myName.substring(index + randomChars[charIndex].length);
      } else {
       yield myName;
      }
      await new Promise((r) => setTimeout(r, 25)); 
  }
  for (let i = 0; i < myName.length; i++) {
    if (randomChars.includes(myName.charAt(i))){
      yield myName = myName.substring(0, i) + realName.charAt(i) + myName.substring(i + 1);
    }
    await new Promise((r) => setTimeout(r, 25));
  }
}

async function* countDown(count) {
  while (count > 0) {
    count--;
    yield Math.floor(Math.random() * 10);
    await new Promise((r) => setTimeout(r, 1000));
  }
}

class MyElement extends LitElement {
  static properties = {
    timer: {state: true},
  };

  constructor() {
    super();
    this.timer = randomizeName(realName);
  }

  render() {
    return html`Name: <span>${asyncReplace(this.timer)}</span>.`;
  }
}
customElements.define('my-element', MyElement);
